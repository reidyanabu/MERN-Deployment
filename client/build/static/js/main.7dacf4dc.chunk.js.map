{"version":3,"sources":["views/NoDice.jsx","views/QuotesHeader.jsx","components/DeleteButton.jsx","views/Authors.jsx","views/AddAuthor.jsx","views/EditAuthor.jsx","components/VoteButton.jsx","views/AuthorQuotes.jsx","views/AddQuote.jsx","App.js","reportWebVitals.js","index.js"],"names":["NoDice","QuotesHeader","to","DeleteButton","props","whatToDelete","callback","authorId","quoteId","className","onClick","url","axios","delete","then","response","catch","e","console","log","put","Authors","useState","authors","setAuthors","useEffect","get","data","hover","bordered","color","class","map","author","author_name","_id","idToRemove","filter","AddAuthor","authorName","setAuthorName","authorNameError","setAuthorNameError","style","textDecoration","Form","Group","as","Row","controlId","Label","column","sm","Col","Control","type","onChange","target","value","name","navigate","preventDefault","length","post","res","status","err","errors","message","EditAuthor","author_id","getAuthor","VoteButton","voteAction","votes","currentVoteCount","AuthorQuotes","setAuthor","quotes","setQuotes","quote","AddQuote","setQuote","quoteError","setQuoteError","App","default","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7dacf4dc.chunk.js","sourcesContent":["const NoDice = () => {\r\n    return (\r\n        <>\r\n        No Dice Man!\r\n        </>\r\n    )\r\n}\r\nexport default NoDice;","import { Link } from '@reach/router';\r\n\r\nconst QuotesHeader = () => {\r\n    return (\r\n        <div>\r\n        <h1><Link to=\"/\">Quote Ranks</Link></h1>\r\n        </div>\r\n    );\r\n}\r\nexport default QuotesHeader;","import axios from 'axios';\r\n\r\nconst DeleteButton = props => {\r\n    \r\n    const { whatToDelete, callback, authorId, quoteId } = props;\r\n\r\n    const handleDelete = () => {\r\n        let url = '';\r\n        \r\n        if (whatToDelete === 'Author') {\r\n            // delete the author\r\n            url = `http://localhost:8000/api/quotes/author/${authorId}`;\r\n            axios.delete(url)\r\n                .then( response => { callback(); } )\r\n                .catch(e=>console.log(e));\r\n        } else if (whatToDelete === 'Quote') {\r\n            // delete the quote (uses put)\r\n            url = `http://localhost:8000/api/quotes/author/remove_quote/${authorId}`;\r\n            axios.put(url, {\r\n                '_id': quoteId\r\n            })\r\n            .then( response => { callback(); } )\r\n            .catch(e=>console.log(e)); \r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <button className={'btn btn-danger'} onClick={handleDelete}>Delete</button>\r\n        </>\r\n    );\r\n}\r\nexport default DeleteButton;","import { Link } from '@reach/router';\r\nimport DeleteButton from '../components/DeleteButton';\r\nimport {MDBTable, MDBTableHead, MDBTableBody} from 'mdbreact';\r\nimport axios from 'axios';\r\nimport { useState, useEffect } from 'react';\r\n\r\nconst Authors = () => {\r\n\r\n    const [authors,setAuthors] = useState([]);\r\n\r\n    const getAuthors = () => {\r\n\r\n        let url = `http://localhost:8000/api/quotes/author`;\r\n        axios.get(url)\r\n        .then( response=> {\r\n            setAuthors(response.data);\r\n        })\r\n        .catch(e=>console.log(e));\r\n    }\r\n\r\n    useEffect( () => {\r\n        getAuthors();\r\n    }, [authors]);\r\n\r\n    const removeFromDom = idToRemove => {\r\n        setAuthors(authors.filter(author => author._id !== idToRemove));\r\n    }\r\n\r\n    return (\r\n    <div className=\"authorsListing\">\r\n        <p><Link to=\"/new\">Add a Quotable Author</Link></p>\r\n        <p><h2>We have quotes by:</h2></p>\r\n        <div className=\"authorsListing\">\r\n            <MDBTable hover bordered className=\"authorsListing\">\r\n                <MDBTableHead color=\"primary-color\">\r\n                    <tr>\r\n                        <th class=\"tablePadding tableHeader\"><b>Author</b></th>\r\n                        <th class=\"tablePadding tableHeader\"><b>Actions Available</b></th>\r\n                    </tr>\r\n                </MDBTableHead>\r\n                <MDBTableBody>\r\n                { (authors).map( (author => (\r\n                    <tr class=\"tablePadding\">\r\n                        <td class=\"tablePadding vAlign\">{author.author_name}</td>\r\n                        <td class=\"tablePadding\">\r\n                            <Link to={`/quotes/${author._id}`}><button className={'btn btn-info'} >View Quotes</button></Link>&nbsp;\r\n                            <Link to={`/edit/${author._id}`}><button className={'btn btn-info'} >Edit Author</button></Link>&nbsp;\r\n                            <DeleteButton authorId={author._id} whatToDelete={'Author'} callback={()=>removeFromDom(author._id)}/>\r\n                        </td>\r\n                    </tr>\r\n                )))}\r\n                </MDBTableBody>\r\n            </MDBTable>\r\n        </div>\r\n    </div>\r\n    );\r\n}\r\nexport default Authors;","import { useState } from 'react';\r\nimport axios from 'axios';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport { Link, navigate } from '@reach/router';\r\n\r\nconst AddAuthor = props => {\r\n\r\n    const [authorName, setAuthorName] = useState(\"\");\r\n    const [authorNameError, setAuthorNameError] = useState(\"\");\r\n\r\n    const onCreateAuthorSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        if (authorName.length<3) {\r\n            setAuthorNameError(\"Author name needs to be at least 3 characters\");\r\n        } else {\r\n            axios.post('http://localhost:8000/api/quotes/author/new', {\r\n                'author_name': authorName\r\n                })\r\n                .then(res=> {\r\n                    if (res.status !== 200) {\r\n                        setAuthorNameError(\"Error creating Author\");\r\n                    } else {\r\n                        navigate('/');\r\n                    }\r\n                }) // navigate back to author listing\r\n                .catch(err=>{\r\n                    setAuthorNameError(err.response.data.errors.author_name.message);\r\n                });\r\n        }\r\n    }\r\n\r\n    return (\r\n    <>\r\n    <div className=\"newAuthor\">\r\n        <Link to=\"/\" style={{ textDecoration: 'none' }}>\r\n            Home\r\n        </Link>\r\n        <div className=\"heading\">\r\n            <h2>Add New Author</h2>\r\n        </div>\r\n        <Form className=\"editCreateForm\">\r\n            <Form.Group as={Row} controlId=\"title\" className=\"formElement\">\r\n                <Form.Label column sm={5}><h5>Author Name: </h5></Form.Label>\r\n                <Col sm={6}>\r\n                    <Form.Control type=\"text\" onChange={(e)=>setAuthorName(e.target.value)} name=\"authorName\" value={authorName}/>\r\n                    {\r\n                    authorNameError ?\r\n                    <p style={{color:'red'}}>{ authorNameError }</p> :\r\n                    ''\r\n                    }\r\n                </Col>\r\n            </Form.Group>\r\n            <Form.Group as={Row} controlId=\"submitForm\" className=\"formElement\">\r\n                <Col><button className=\"btn btn-danger\" onClick={()=>navigate(`/`)}>Cancel</button></Col>\r\n                <Col><input className=\"btn btn-primary\" type=\"submit\"onClick={onCreateAuthorSubmit}/></Col>\r\n            </Form.Group>\r\n        </Form>\r\n    </div>\r\n    </>\r\n    );\r\n}\r\nexport default AddAuthor;","import { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport { Link, navigate } from '@reach/router';\r\n\r\nconst EditAuthor = props => {\r\n\r\n    const [authorName, setAuthorName] = useState(\"\");\r\n    const [authorNameError, setAuthorNameError] = useState(\"\");\r\n    const { author_id } = props;\r\n\r\n    const getAuthor = () => {\r\n\r\n        let url = `http://localhost:8000/api/quotes/author/${author_id}`;\r\n        axios.get(url)\r\n            .then(response=> {\r\n                setAuthorName(response.data.author_name);\r\n            })\r\n            .catch(e=> {\r\n                console.log(e);\r\n                navigate(\"/no_dice\");\r\n            });\r\n    }\r\n\r\n    useEffect( () => {\r\n        getAuthor();\r\n    }, []);\r\n\r\n    const onEditAuthorSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        if (authorName.length<3) {\r\n            setAuthorNameError(\"Author name needs to be at least 3 characters\");\r\n        } else {\r\n            let url = `http://localhost:8000/api/quotes/author/edit/${author_id}`;\r\n            axios.put(url, { \r\n                'author_name': authorName\r\n                })\r\n                .then(res=> {\r\n                    if (res.status !== 200) {\r\n                        setAuthorNameError(\"Error updating Author\");\r\n                    } else {\r\n                        navigate('/');\r\n                    }\r\n                })\r\n                .catch(err=>{\r\n                    setAuthorNameError(err.response.data.errors.author_name.message);\r\n                });\r\n        }\r\n    }\r\n\r\n    return (\r\n    <>\r\n    <div className=\"newAuthor\">\r\n        <Link to=\"/\" style={{ textDecoration: 'none' }}>\r\n            Home\r\n        </Link>\r\n        <div className=\"heading\">\r\n            <h2>Update Author</h2>\r\n        </div>\r\n        <Form className=\"editCreateForm\">\r\n            <Form.Group as={Row} controlId=\"title\" className=\"formElement\">\r\n                <Form.Label column sm={5}><h5>Author Name: </h5></Form.Label>\r\n                <Col sm={6}>\r\n                    <Form.Control type=\"text\" onChange={(e)=>setAuthorName(e.target.value)} name=\"authorName\" value={authorName}/>\r\n                    {\r\n                    authorNameError ?\r\n                    <p style={{color:'red'}}>{ authorNameError }</p> :\r\n                    ''\r\n                    }\r\n                </Col>\r\n            </Form.Group>\r\n            <Form.Group as={Row} controlId=\"submitForm\" className=\"formElement\">\r\n                <Col><button className=\"btn btn-danger\" onClick={()=>navigate(`/`)} value=\"cancel\">Cancel</button></Col>\r\n                <Col><input className=\"btn btn-primary\" onClick={onEditAuthorSubmit} type=\"submit\"/></Col>\r\n            </Form.Group>\r\n        </Form>\r\n    </div>\r\n    </>\r\n    );\r\n}\r\nexport default EditAuthor;","import axios from \"axios\";\r\n\r\nconst VoteButton = props => {\r\n\r\n    const { voteAction, authorId, quoteId, votes } = props;\r\n\r\n    const handleVoteClick = () => {\r\n        \r\n        let currentVoteCount = votes;\r\n        let url = `http://localhost:8000/api/quotes/${authorId}`;\r\n        if (voteAction === 'Up') {\r\n            currentVoteCount += 1;\r\n        } else if (voteAction === 'Down') {\r\n            currentVoteCount -= 1;\r\n        }\r\n        axios.put(url, {\r\n                'quote_id': quoteId,\r\n                'votes': currentVoteCount\r\n            })\r\n            .catch(e=>console.log(e));\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <button className={'btn btn-info'} onClick={ handleVoteClick }>Vote {voteAction}</button>\r\n        </>\r\n    );\r\n}\r\nexport default VoteButton;","import { Link, navigate } from '@reach/router';\r\nimport DeleteButton from '../components/DeleteButton';\r\nimport VoteButton from '../components/VoteButton';\r\nimport {MDBTable, MDBTableHead, MDBTableBody} from 'mdbreact';\r\nimport axios from 'axios';\r\nimport { useState, useEffect } from 'react';\r\n\r\nconst AuthorQuotes = props => {\r\n\r\n    const [author,setAuthor] = useState();\r\n    const [quotes,setQuotes] = useState([]);\r\n    const [authorName, setAuthorName] = useState('');\r\n\r\n    const { author_id } = props;\r\n\r\n    useEffect( () => {\r\n        getAuthor();\r\n    }, [author]);\r\n\r\n    const getAuthor = () => {\r\n\r\n        let url = `http://localhost:8000/api/quotes/author/${author_id}`;\r\n        axios.get(url)\r\n            .then( response=> {\r\n                setAuthor(response.data);\r\n                setQuotes(response.data.quotes);\r\n                setAuthorName(response.data.author_name);\r\n        })\r\n        .catch(e=>console.log(e)); \r\n    }\r\n\r\n    const removeFromDom = idToRemove => {\r\n        setQuotes(quotes.filter(quote => quote._id !== idToRemove));\r\n    }\r\n\r\n    return (\r\n    <div className=\"authorsListing\">\r\n        <div className=\"authorsListing\">\r\n        <p><Link to=\"/\">Home</Link>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<Link to={`/quotes/${author_id}/new`}>Add A Quote</Link></p>\r\n        <p><h2>Quotes by {authorName}</h2></p>\r\n        <MDBTable hover bordered className=\"authorsListing\">\r\n                <MDBTableHead color=\"primary-color\">\r\n                    <tr>\r\n                        <th class=\"tablePadding tableHeader\"><b>Quote</b></th>\r\n                        <th class=\"tablePadding tableHeader\"><b>Votes</b></th>\r\n                        <th class=\"tablePadding tableHeader\"><b>Actions Available</b></th>\r\n                    </tr>\r\n                </MDBTableHead>\r\n                <MDBTableBody>\r\n                { (quotes).map( (quote => (\r\n                    <tr class=\"tablePadding\">\r\n                        <td class=\"tablePadding vAlign\">'{quote.quote}'</td>\r\n                        <td class=\"tablePadding vAlign\">{quote.votes}</td>\r\n                        <td class=\"tablePadding\">\r\n                            <VoteButton voteAction={'Up'}   authorId={author._id} quoteId={quote._id} votes={quote.votes}/>\r\n                            <VoteButton voteAction={'Down'} authorId={author._id} quoteId={quote._id} votes={quote.votes}/>\r\n                            <DeleteButton authorId={author._id} quoteId={quote._id} whatToDelete={'Quote'} callback={()=>removeFromDom(quote._id)}/>\r\n                        </td>\r\n                    </tr>\r\n                )))}\r\n                </MDBTableBody>\r\n            </MDBTable>\r\n        </div>\r\n    </div>\r\n    );\r\n}\r\nexport default AuthorQuotes;","import { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport { Link, navigate } from '@reach/router';\r\n\r\nconst AddQuote = props => {\r\n\r\n    const [quote, setQuote] = useState(\"\");\r\n    const [quoteError, setQuoteError] = useState(\"\");\r\n\r\n    const [authorName, setAuthorName] = useState('');\r\n\r\n    const { author_id } = props;\r\n\r\n    const getAuthor = () => {\r\n\r\n        let url = `http://localhost:8000/api/quotes/author/${author_id}`;\r\n        axios.get(url)\r\n            .then(response=> {\r\n                setAuthorName(response.data.author_name);\r\n            })\r\n            .catch(e=> {\r\n                console.log(e);\r\n                navigate(\"/no_dice\");\r\n            });\r\n    }\r\n\r\n    useEffect( () => {\r\n        getAuthor();\r\n    }, []);\r\n\r\n    const onCreateQuoteSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        if (quote.length<3) {\r\n            setQuoteError(\"A quote needs to be at least 3 characters\");\r\n        } else {\r\n            let url = `http://localhost:8000/api/quotes/author/new_quote/${author_id}`;\r\n            axios.put(url, {\r\n                'quote': quote\r\n                })\r\n                .then(res=> {\r\n                    if (res.status !== 200) {\r\n                        setQuoteError(\"Error creating Quote\");\r\n                    } else {\r\n                        navigate(`/quotes/${author_id}`);\r\n                    }\r\n                })\r\n                .catch(err=>{\r\n                    setQuoteError(err.response.data.errors.quote.message);\r\n                });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <div className=\"newQuote\">\r\n            <Link to=\"/\" style={{ textDecoration: 'none' }}>\r\n                Home\r\n            </Link>\r\n            <div className=\"heading\">\r\n                <h2>Add New Quote</h2>\r\n            </div>\r\n            <p><h4>Provide a quote by {authorName}</h4></p>\r\n            <Form className=\"editCreateForm\">\r\n                <Form.Group as={Row} controlId=\"quote\" className=\"formElement\">\r\n                    <Form.Label column sm={5}><h5>Quote: </h5></Form.Label>\r\n                    <Col sm={6}>\r\n                        <Form.Control type=\"text\" onChange={(e)=>setQuote(e.target.value)} name=\"quote\" value={quote}/>\r\n                        {\r\n                        quoteError ?\r\n                        <p style={{color:'red'}}>{ quoteError }</p> :\r\n                        ''\r\n                        }\r\n                    </Col>\r\n                </Form.Group>\r\n                <Form.Group as={Row} controlId=\"submitForm\" className=\"formElement\">\r\n                    <Col><button className=\"btn btn-danger\" onClick={()=>navigate(`/quotes/${author_id}`)}>Cancel</button></Col>\r\n                    <Col><input className=\"btn btn-primary\" type=\"submit\" onClick={onCreateQuoteSubmit}/></Col>\r\n                </Form.Group>\r\n            </Form>\r\n        </div>\r\n        </>\r\n    );\r\n}\r\nexport default AddQuote;","import 'react-bootstrap-table/dist/react-bootstrap-table-all.min.css';\nimport 'bootstrap-css-only/css/bootstrap.min.css';\nimport 'mdbreact/dist/css/mdb.css';\nimport './App.css';\nimport { Router  } from '@reach/router';\nimport NoDice from './views/NoDice';\nimport QuotesHeader from './views/QuotesHeader';\nimport Authors from './views/Authors';\nimport AddAuthor from './views/AddAuthor';\nimport EditAuthor from './views/EditAuthor';\nimport AuthorQuotes from './views/AuthorQuotes';\nimport AddQuote from './views/AddQuote';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <QuotesHeader/>\n      <Router>\n          <Authors default path='/'/>\n          <AddAuthor path='/new' />\n          <EditAuthor path='/edit/:author_id' />\n          <AuthorQuotes path='/quotes/:author_id'/>\n          <AddQuote path='/quotes/:author_id/new'/>\n          <NoDice path='/no_dice'/>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}